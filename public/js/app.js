"use strict";$(function(){function e(){T=O%2==0?"Player 2":"Player 1"}function n(e){f.removeClass("hiddener"),f.html(e),setTimeout(o,500)}function o(){f.addClass("hiddener")}function i(){for(var e=0;e<C;e++){var n=Math.floor(8*Math.random());p.push(g[v[n]])}console.log("initializing!"),a()}function a(){I=[],setTimeout(function(){if(!(w<C))return void(w=0);a(),t(p[w]),h.addClass("hidden"),h.html(T),console.log(p[w].audio),console.log(I),w++},1e3)}function t(e){d.src="src/assets/audio/"+e.audio+".wav",d.play(),n(e.audio);var o=e.element.clone();o.appendTo("main").removeClass("hidden").addClass(e.animationIn).removeClass(e.animationOut),setTimeout(function(){o.removeClass(e.animationIn).addClass(e.animationOut)},1200),setTimeout(function(){o.remove()},1900)}function s(){var n=I.length===p.length&&I.every(function(e,n){return e===p[n].audio});if(console.log("userSequence",I),console.log("programSequence",p),(S+=1)===C&&0===M&&!0!==y)if(console.log(n),!0===n){var o=Math.floor(8*Math.random());p.push(g[v[o]]),console.log(p),I=[],S=0,C+=1,O+=1,e(),h.html("Pass! - next up "+T),h.removeClass("hidden"),setTimeout(a,3e3)}else!1===n&&!0!==y&&(I=[],S=0,M+=1,O+=1,setTimeout(a,3e3),e(),h.html("Fail! sudden death!! -next up "+T),h.removeClass("hidden"));else S===C&&0!==M&&!0!==y&&(!0===n?(h.html(T+" Wins!"),h.removeClass("hidden"),c.removeClass("hidden")):!1===n&&!0!==y&&(h.html(T+" Fails!! ---- TIE!"),h.removeClass("hidden"),c.removeClass("hidden")))}console.log("JS yo");var l=$(document),d=$("audio")[0],u=$(".welcome"),m=$("#game"),r=$("#playground"),h=$(".feedback"),c=($(".reset"),$(".endgame")),f=($(".switch"),$(".numberDisplay")),v=[1,2,3,4,5,6,7,8],g={1:{element:$(".first"),animationIn:"fadeInDownBig",animationOut:"zoomOut",audio:1},2:{element:$(".second"),animationIn:"zoomIn",animationOut:"fadeOut",audio:2},3:{element:$(".third"),animationIn:"flash",animationOut:"fadeOut",audio:3},4:{element:$(".fourth"),animationIn:"rotateIn",animationOut:"rotateOut",audio:4},5:{element:$(".fifth"),animationIn:"flashtwo",animationOut:"fadeOut",audio:5},6:{element:$(".sixth"),animationIn:"fadeInUpBig",animationOut:"lightSpeedOut",audio:6},7:{element:$(".seventh"),animationIn:"shake",animationOut:"fadeOut",audio:7},8:{element:$(".eighth"),animationIn:"slideInLeft",animationOut:"fadeOut",audio:8}},C=3,O=C,p=[],I=[],y=!1,k=!1,T="player 1";l.keypress(function(e){var n=g[e.key];if(!0===k||!0===y&&n){var i=e.key;t(n),f.removeClass("hiddener"),f.html(i),setTimeout(o,500)}}),m.on("click",function(){u.hide(),k=!0,h.removeClass("hidden"),h.html(T),setTimeout(i,3e3)}),r.on("click",function(){u.hide(),y=!0,c.removeClass("hidden")});var w=0;!function(){console.log("listening..."),l.keypress(function(e){I.push(parseInt(e.key)),s()})}();var M=0,S=0;c.on("click",function(){C=3,O=C,p=[],I=[],k=!1,y=!1,e(),M=0,S=0,h.html(""),u.show(),c.addClass("hidden")})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
