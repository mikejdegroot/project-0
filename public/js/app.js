"use strict";$(function(){function e(){I=v%2==0?"Player 2":"Player 1"}function n(){for(var e=0;e<c;e++){var n=Math.floor(8*Math.random());O.push(f[h[n]])}console.log("initializing!"),a()}function a(){g=[],setTimeout(function(){if(!(p<c))return void(p=0);a(),t(O[p]),m.addClass("hidden"),m.html(I),console.log(O[p].audio),p++},1e3)}function t(e){m.html(I),s.src="audio/"+e.audio+".wav",s.play();var n=e.element.clone();n.appendTo("main").removeClass("hidden").addClass(e.animationIn).removeClass(e.animationOut),setTimeout(function(){n.removeClass(e.animationIn).addClass(e.animationOut)},1200),setTimeout(function(){n.remove()},1900)}function i(){var n=g.length===O.length&&g.every(function(e,n){return e===O[n].audio});if((T+=1)===c&&0===y)if(console.log(n),!0===n){var t=Math.floor(8*Math.random());O.push(f[h[t]]),console.log(O),g=[],T=0,c+=1,v+=1,e(),m.html("Pass! - next up "+I),m.removeClass("hidden"),setTimeout(a,3e3)}else!1===n&&(g=[],T=0,y+=1,v+=1,setTimeout(a,3e3),e(),m.html("Fail! sudden death!! -next up "+I),m.removeClass("hidden"));else T===c&&0!==y&&(!0===n?(m.html(I+" Wins!"),m.removeClass("hidden"),u.removeClass("hidden")):!1===n&&(m.html(I+" Fails!! ---- TIE!"),m.removeClass("hidden"),r.removeClass("hidden")))}console.log("JS yo");var o=$(document),s=$("audio")[0],d=$(".welcome"),l=$("#game"),m=$(".feedback"),u=$(".reset"),r=$(".endgame"),h=[49,50,51,52,53,54,55,56],f={49:{element:$(".first"),animationIn:"fadeInDownBig",animationOut:"zoomOut",audio:49},50:{element:$(".second"),animationIn:"zoomIn",animationOut:"fadeOut",audio:50},51:{element:$(".third"),animationIn:"flash",animationOut:"fadeOut",audio:51},52:{element:$(".fourth"),animationIn:"rotateIn",animationOut:"rotateOut",audio:52},53:{element:$(".fifth"),animationIn:"flashtwo",animationOut:"fadeOut",audio:53},54:{element:$(".sixth"),animationIn:"fadeInUpBig",animationOut:"lightSpeedOut",audio:54},55:{element:$(".seventh"),animationIn:"shake",animationOut:"fadeOut",audio:55},56:{element:$(".eighth"),animationIn:"slideInLeft",animationOut:"fadeOut",audio:56}},c=3,v=c,O=[],g=[],C=!1,I="player 1";o.keypress(function(e){t(f[""+e.charCode])}),l.on("click",function(){d.hide(),C=!0,m.removeClass("hidden"),m.html(I),setTimeout(n,3e3)});var p=0;!function(){console.log("listening..."),o.keypress(function(e){g.push(e.charCode),i()})}();var y=0,T=0;r.on("click",function(){c=3,v=c,O=[],g=[],C=!1,e(),y=0,T=0,m.html(""),d.show(),r.addClass("hidden")})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
