"use strict";$(function(){function e(){P=[],M=[],T=3,w=T,l(),D=0,F=0,b="Player 1"}function n(e){if((z||x)&&k[e.key]){var n=k[e.key],t=e.key;s(n),P.push(parseInt(e.key)),y.removeClass("hiddener"),y.html(t),setTimeout(a,500),d()}}function t(e){y.removeClass("hiddener"),y.html(e),setTimeout(a,500)}function a(){y.addClass("hiddener")}function i(){for(var e=0;e<T;e++){var n=Math.floor(8*Math.random());M.push(k[g[n]])}o()}function o(){setTimeout(function(){B<T?(s(M[B]),O.addClass("hidden"),O.html(b),o(),B++):(B=0,r.keypress(n))},1e3)}function s(e){c.src="src/assets/audio/"+e.audio+".wav",c.play(),t(e.audio);var n=e.element.clone();n.appendTo("main").removeClass("hidden").addClass(e.animationIn).removeClass(e.animationOut),setTimeout(function(){n.removeClass(e.animationIn).addClass(e.animationOut)},1200),setTimeout(function(){n.remove()},1900)}function d(){var e=P.length===M.length&&P.every(function(e,n){return e===M[n].audio});F+=1,F===T&&0===D&&z?(console.log(e),e?(T+=1,u(),m(),O.html("Pass! - next up "+b),O.removeClass("hidden"),h(),setTimeout(o,3e3)):e||(D+=1,m(),h(),setTimeout(o,3e3),O.html("Fail! sudden death!! -next up "+b),O.removeClass("hidden"))):F===T&&0!==D&&(e?(O.html(b+" Wins!"),O.removeClass("hidden"),p.removeClass("hidden")):e||(O.html(b+" Fails!! ---- TIE!"),O.removeClass("hidden"),p.removeClass("hidden")))}function u(){var e=Math.floor(8*Math.random());M.push(k[g[e]])}function m(){P=[],F=0,w+=1,l()}function l(){b=w%2==0?"Player 2":"Player 1"}function h(){r.unbind("keypress",n)}console.log("JS yo");var r=$(document),c=$("audio")[0],f=$(".welcome"),v=$("#game"),C=$("#playground"),O=$(".feedback"),p=$(".endgame"),I=$(".switch"),y=$(".numberDisplay"),g=[1,2,3,4,5,6,7,8],k={1:{element:$(".first"),animationIn:"fadeInDownBig",animationOut:"zoomOut",audio:1},2:{element:$(".second"),animationIn:"zoomIn",animationOut:"fadeOut",audio:2},3:{element:$(".third"),animationIn:"flash",animationOut:"fadeOut",audio:3},4:{element:$(".fourth"),animationIn:"rotateIn",animationOut:"rotateOut",audio:4},5:{element:$(".fifth"),animationIn:"flashtwo",animationOut:"fadeOut",audio:5},6:{element:$(".sixth"),animationIn:"fadeInUpBig",animationOut:"lightSpeedOut",audio:6},7:{element:$(".seventh"),animationIn:"shake",animationOut:"fadeOut",audio:7},8:{element:$(".eighth"),animationIn:"slideInLeft",animationOut:"fadeOut",audio:8}},T=3,w=T,M=[],P=[],b="player 1",x=!1,z=!1;v.on("click",function(){f.hide(),z=!0,x=!1,e(),O.removeClass("hidden"),O.html(b),setTimeout(i,3e3)}),C.on("click",function(){f.hide(),x=!0,z=!1,p.removeClass("hidden"),e(),r.keypress(n)}),I.on("change",function(){console.log("checked"),y.toggleClass("hidden")});var B=0,D=0,F=0;p.on("click",function(){z=!1,x=!1,D=0,F=0,O.html(""),f.show(),p.addClass("hidden"),h()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
