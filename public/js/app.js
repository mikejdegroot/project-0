"use strict";$(function(){function e(){b=[],w=[],k=3,T=k,m(),B=0,D=0}function n(e){if(!0===z||!0===x){var n=y[e.key],i=e.key;s(n),b.push(parseInt(e.key)),O.removeClass("hiddener"),O.html(i),setTimeout(t,500),d()}}function i(e){O.removeClass("hiddener"),O.html(e),setTimeout(t,500)}function t(){O.addClass("hiddener")}function a(){for(var e=0;e<k;e++){var n=Math.floor(8*Math.random());w.push(y[I[n]])}console.log("initializing!"),o()}function o(){b=[],setTimeout(function(){P<k?(o(),s(w[P]),p.addClass("hidden"),p.html(M),console.log(w[P].audio),P++):(P=0,b=[],r.keypress(n))},1e3)}function s(e){h.src="src/assets/audio/"+e.audio+".wav",h.play(),i(e.audio);var n=e.element.clone();n.appendTo("main").removeClass("hidden").addClass(e.animationIn).removeClass(e.animationOut),setTimeout(function(){n.removeClass(e.animationIn).addClass(e.animationOut)},1200),setTimeout(function(){n.remove()},1900)}function d(){var e=b.length===w.length&&b.every(function(e,n){return e===w[n].audio});D+=1,D===k&&0===B&&!0!==x&&!0===z?(console.log(e),!0===e?(k+=1,u(),l(),p.html("Pass! - next up "+M),p.removeClass("hidden"),r.unbind("keypress",n),setTimeout(o,3e3)):!1===e&&!0!==x&&(B+=1,l(),r.unbind("keypress",n),setTimeout(o,3e3),p.html("Fail! sudden death!! -next up "+M),p.removeClass("hidden"))):D===k&&0!==B&&!0!==x&&(!0===e?(p.html(M+" Wins!"),p.removeClass("hidden"),C.removeClass("hidden")):!1===e&&!0!==x&&(p.html(M+" Fails!! ---- TIE!"),p.removeClass("hidden"),C.removeClass("hidden")))}function u(){var e=Math.floor(8*Math.random());w.push(y[I[e]])}function l(){b=[],D=0,T+=1,m()}function m(){M=T%2==0?"Player 2":"Player 1"}console.log("JS yo");var r=$(document),h=$("audio")[0],c=$(".welcome"),f=$("#game"),v=$("#playground"),p=$(".feedback"),C=($(".reset"),$(".endgame")),g=$(".switch"),O=$(".numberDisplay"),I=[1,2,3,4,5,6,7,8],y={1:{element:$(".first"),animationIn:"fadeInDownBig",animationOut:"zoomOut",audio:1},2:{element:$(".second"),animationIn:"zoomIn",animationOut:"fadeOut",audio:2},3:{element:$(".third"),animationIn:"flash",animationOut:"fadeOut",audio:3},4:{element:$(".fourth"),animationIn:"rotateIn",animationOut:"rotateOut",audio:4},5:{element:$(".fifth"),animationIn:"flashtwo",animationOut:"fadeOut",audio:5},6:{element:$(".sixth"),animationIn:"fadeInUpBig",animationOut:"lightSpeedOut",audio:6},7:{element:$(".seventh"),animationIn:"shake",animationOut:"fadeOut",audio:7},8:{element:$(".eighth"),animationIn:"slideInLeft",animationOut:"fadeOut",audio:8}},k=3,T=k,w=[],b=[],M="player 1",x=!1,z=!1;f.on("click",function(){c.hide(),z=!0,p.removeClass("hidden"),p.html(M),e(),setTimeout(a,3e3)}),v.on("click",function(){c.hide(),x=!0,C.removeClass("hidden"),e(),r.keypress(n)}),g.on("change",function(){console.log("checked"),O.toggleClass("hidden")});var P=0,B=0,D=0;C.on("click",function(){z=!1,x=!1,B=0,D=0,p.html(""),c.show(),C.addClass("hidden"),r.unbind("keypress",n)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
