"use strict";$(function(){function n(){for(var n=0;n<m;n++){var o=Math.floor(8*Math.random());r.push(d[u[o]])}console.log("initializing!"),e()}function e(){O=0,c=[],setTimeout(function(){if(i.src="audio/"+r[h].audio+".wav",i.play(),!(++h<m))return h=0,void console.log(r);e(),o(h)},1e3)}function o(n){var e=r[n];console.log(e),e.element.removeClass("hidden").addClass(e.animationIn).removeClass(e.animationOut),setTimeout(function(){e.element.removeClass(e.animationIn).addClass(e.animationOut)},1200),setTimeout(function(){e.element.addClass("hidden")},1900)}function a(){var n=c.length===r.length&&c.every(function(n,e){return n===r[e]});if((O+=1)===m&&0===v)if(console.log(n),!0===n){var o=Math.floor(8*Math.random());r.push(u[o]),c=[],O=0,e(),m+=1}else!1===n&&(console.log("sudden death!"),O=0,v+=1,e());else O===m&&0!==v&&(!0===n?console.log("winner winner!"):!1===n&&console.log("tie"))}console.log("JS yo");var t=$(document),i=$("audio")[0],l=$(".welcome"),s=$("#game"),u=[49,50,51,52,53,54,55,56],d={49:{element:$(".first"),animationIn:"fadeInDownBig",animationOut:"fadeOut",audio:49},50:{element:$(".second"),animationIn:"zoomIn",animationOut:"fadeOut",audio:50},51:{element:$(".third"),animationIn:"flash",animationOut:"fadeOut",audio:51},52:{element:$(".fourth"),animationIn:"rotateIn",animationOut:"fadeOut",audio:52},53:{element:$(".fifth"),animationIn:"flashtwo",animationOut:"fadeOut",audio:53},54:{element:$(".sixth"),animationIn:"rotateIn",animationOut:"fadeOut",audio:54},55:{element:$(".seventh"),animationIn:"rotateIn",animationOut:"fadeOut",audio:55},56:{element:$(".eighth"),animationIn:"rotateIn",animationOut:"fadeOut",audio:56}},m=3,r=[],c=[],f=!1;t.keypress(function(n){var e=d[""+n.charCode];console.log(n.charCode),i.src="audio/"+n.charCode+".wav",i.play(),e.element.removeClass("hidden").addClass(e.animationIn).removeClass(e.animationOut),setTimeout(function(){e.element.removeClass(e.animationIn).addClass(e.animationOut)},1200),setTimeout(function(){e.element.addClass("hidden")},1900)}),s.on("click",function(){l.hide(),f=!0,n()});var h=0;!function(){console.log("listening..."),t.keypress(function(n){c.push(n.charCode),console.log(c),a()})}();var v=0,O=0});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
