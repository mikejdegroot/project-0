"use strict";$(function(){function o(){for(var o=0;o<s;o++){console.log("initializing!");var e=Math.floor(8*Math.random());u.push(r[e])}n()}function n(){setTimeout(function(){a.src="audio/"+u[d]+".wav",a.play(),d++,d<s?n():(e(),d=0,console.log(u))},1500)}function e(){console.log("listening..."),t.keypress(function(o){f.push(o.charCode.toString()),c()})}function c(){g+=1;var o=f.length===u.length&&f.every(function(o,n){return o===u[n]});if(g===s&&(console.log(o),!0===o)){var e=Math.floor(Math.random());u.push(r[e]),s+=1,clearInterval(d),n()}}console.log("JS yo");var t=$(document),a=$("audio")[0],i=$(".welcome"),l=$("#game"),r=["49","50","51","52","53","54","55","56"],s=3,u=[],f=[],g=0,h=!1;t.keypress(function(o){console.log(o.charCode),a.src="audio/"+o.charCode+".wav",a.play()}),l.on("click",function(){i.hide(),h=!0,console.log(h),o()});var d=0});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
