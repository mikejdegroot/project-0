"use strict";$(function(){function e(){p=v%2==0?"Player 2":"Player 1"}function n(){for(var e=0;e<c;e++){var n=Math.floor(8*Math.random());O.push(f[h[n]])}console.log("initializing!"),i()}function i(){g=[],setTimeout(function(){if(!(y<c))return void(y=0);i(),a(O[y]),m.addClass("hidden"),m.html(p),console.log(O[y].audio),y++},1e3)}function a(e){s.src="audio/"+e.audio+".wav",s.play();var n=e.element.clone();n.appendTo("main").removeClass("hidden").addClass(e.animationIn).removeClass(e.animationOut),setTimeout(function(){n.removeClass(e.animationIn).addClass(e.animationOut)},1200),setTimeout(function(){n.remove()},1900)}function o(){var n=g.length===O.length&&g.every(function(e,n){return e===O[n].audio});if((k+=1)===c&&0===T&&!0!==C)if(console.log(n),!0===n){var a=Math.floor(8*Math.random());O.push(f[h[a]]),console.log(O),g=[],k=0,c+=1,v+=1,e(),m.html("Pass! - next up "+p),m.removeClass("hidden"),setTimeout(i,3e3)}else!1===n&&!0!==C&&(g=[],k=0,T+=1,v+=1,setTimeout(i,3e3),e(),m.html("Fail! sudden death!! -next up "+p),m.removeClass("hidden"));else k===c&&0!==T&&!0!==C&&(!0===n?(m.html(p+" Wins!"),m.removeClass("hidden"),r.removeClass("hidden")):!1===n&&!0!==C&&(m.html(p+" Fails!! ---- TIE!"),m.removeClass("hidden"),r.removeClass("hidden")))}console.log("JS yo");var t=$(document),s=$("audio")[0],d=$(".welcome"),l=$("#game"),u=$("#playground"),m=$(".feedback"),r=($(".reset"),$(".endgame")),h=[49,50,51,52,53,54,55,56],f={49:{element:$(".first"),animationIn:"fadeInDownBig",animationOut:"zoomOut",audio:49},50:{element:$(".second"),animationIn:"zoomIn",animationOut:"fadeOut",audio:50},51:{element:$(".third"),animationIn:"flash",animationOut:"fadeOut",audio:51},52:{element:$(".fourth"),animationIn:"rotateIn",animationOut:"rotateOut",audio:52},53:{element:$(".fifth"),animationIn:"flashtwo",animationOut:"fadeOut",audio:53},54:{element:$(".sixth"),animationIn:"fadeInUpBig",animationOut:"lightSpeedOut",audio:54},55:{element:$(".seventh"),animationIn:"shake",animationOut:"fadeOut",audio:55},56:{element:$(".eighth"),animationIn:"slideInLeft",animationOut:"fadeOut",audio:56}},c=3,v=c,O=[],g=[],C=!1,I=!1,p="player 1";t.keypress(function(e){if(!0===I||!0===C){a(f[""+e.charCode])}}),l.on("click",function(){d.hide(),I=!0,m.removeClass("hidden"),m.html(p),setTimeout(n,3e3)}),u.on("click",function(){d.hide(),C=!0,r.removeClass("hidden")});var y=0;!function(){console.log("listening..."),t.keypress(function(e){g.push(e.charCode),o()})}();var T=0,k=0;r.on("click",function(){c=3,v=c,O=[],g=[],I=!1,C=!1,e(),T=0,k=0,m.html(""),d.show(),r.addClass("hidden")})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
