"use strict";$(function(){function n(){for(var n=0;n<d;n++){var e=Math.floor(8*Math.random());f.push(m[s[e]])}console.log("initializing!"),o()}function o(){r=[],setTimeout(function(){if(!(h<d))return h=0,void console.log(f);o(),e(f[h]),h++},1e3)}function e(n){t.src="audio/"+n.audio+".wav",t.play();var o=n.element.clone();o.appendTo("main").removeClass("hidden").addClass(n.animationIn).removeClass(n.animationOut),setTimeout(function(){o.removeClass(n.animationIn).addClass(n.animationOut)},1200),setTimeout(function(){o.remove()},1900)}function a(){var n=r.length===f.length&&r.every(function(n,o){return n===f[o].audio});if((g+=1)===d&&0===O)if(console.log(n),!0===n){var e=Math.floor(8*Math.random());f.push(m[s[e]]),r=[],g=0,o(),d+=1}else!1===n&&(console.log("sudden death!"),g=0,O+=1,o());else g===d&&0!==O&&(!0===n?console.log("winner winner!"):!1===n&&console.log("tie"))}console.log("JS yo");var i=$(document),t=$("audio")[0],u=$(".welcome"),l=$("#game"),s=[49,50,51,52,53,54,55,56],m={49:{element:$(".first"),animationIn:"fadeInDownBig",animationOut:"fadeOut",audio:49},50:{element:$(".second"),animationIn:"zoomIn",animationOut:"fadeOut",audio:50},51:{element:$(".third"),animationIn:"flash",animationOut:"fadeOut",audio:51},52:{element:$(".fourth"),animationIn:"rotateIn",animationOut:"fadeOut",audio:52},53:{element:$(".fifth"),animationIn:"flashtwo",animationOut:"fadeOut",audio:53},54:{element:$(".sixth"),animationIn:"fadeInUpBig",animationOut:"fadeOut",audio:54},55:{element:$(".seventh"),animationIn:"shake",animationOut:"fadeOut",audio:55},56:{element:$(".eighth"),animationIn:"slideInLeft",animationOut:"fadeOut",audio:56}},d=3,f=[],r=[],c=!1;i.keypress(function(n){e(m[""+n.charCode])}),l.on("click",function(){u.hide(),c=!0,n()});var h=0;!function(){console.log("listening..."),i.keypress(function(n){r.push(n.charCode),console.log(r),a()})}();var O=0,g=0});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
